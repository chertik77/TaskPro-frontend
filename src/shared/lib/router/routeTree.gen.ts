/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './../../../app/routes/__root'
import { Route as DashboardLayoutRouteImport } from './../../../app/routes/dashboard/layout'
import { Route as IndexRouteImport } from './../../../app/routes/index'
import { Route as DashboardIndexRouteImport } from './../../../app/routes/dashboard/index'
import { Route as DashboardBoardIdRouteImport } from './../../../app/routes/dashboard/$boardId'
import { Route as AuthAuthLayoutRouteImport } from './../../../app/routes/auth/_auth-layout'
import { Route as AuthAuthLayoutSignupRouteImport } from './../../../app/routes/auth/_auth-layout.signup'
import { Route as AuthAuthLayoutSigninRouteImport } from './../../../app/routes/auth/_auth-layout.signin'

const AuthRouteImport = createFileRoute('/auth')()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardLayoutRoute = DashboardLayoutRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)
const DashboardBoardIdRoute = DashboardBoardIdRouteImport.update({
  id: '/$boardId',
  path: '/$boardId',
  getParentRoute: () => DashboardLayoutRoute,
} as any)
const AuthAuthLayoutRoute = AuthAuthLayoutRouteImport.update({
  id: '/_auth-layout',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAuthLayoutSignupRoute = AuthAuthLayoutSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthAuthLayoutRoute,
} as any)
const AuthAuthLayoutSigninRoute = AuthAuthLayoutSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthAuthLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/auth': typeof AuthAuthLayoutRouteWithChildren
  '/dashboard/$boardId': typeof DashboardBoardIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/auth/signin': typeof AuthAuthLayoutSigninRoute
  '/auth/signup': typeof AuthAuthLayoutSignupRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthAuthLayoutRouteWithChildren
  '/dashboard/$boardId': typeof DashboardBoardIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/auth/signin': typeof AuthAuthLayoutSigninRoute
  '/auth/signup': typeof AuthAuthLayoutSignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/_auth-layout': typeof AuthAuthLayoutRouteWithChildren
  '/dashboard/$boardId': typeof DashboardBoardIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/auth/_auth-layout/signin': typeof AuthAuthLayoutSigninRoute
  '/auth/_auth-layout/signup': typeof AuthAuthLayoutSignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth'
    | '/dashboard/$boardId'
    | '/dashboard/'
    | '/auth/signin'
    | '/auth/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/dashboard/$boardId'
    | '/dashboard'
    | '/auth/signin'
    | '/auth/signup'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/auth'
    | '/auth/_auth-layout'
    | '/dashboard/$boardId'
    | '/dashboard/'
    | '/auth/_auth-layout/signin'
    | '/auth/_auth-layout/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/dashboard/$boardId': {
      id: '/dashboard/$boardId'
      path: '/$boardId'
      fullPath: '/dashboard/$boardId'
      preLoaderRoute: typeof DashboardBoardIdRouteImport
      parentRoute: typeof DashboardLayoutRoute
    }
    '/auth/_auth-layout': {
      id: '/auth/_auth-layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthLayoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/_auth-layout/signup': {
      id: '/auth/_auth-layout/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthAuthLayoutSignupRouteImport
      parentRoute: typeof AuthAuthLayoutRoute
    }
    '/auth/_auth-layout/signin': {
      id: '/auth/_auth-layout/signin'
      path: '/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthAuthLayoutSigninRouteImport
      parentRoute: typeof AuthAuthLayoutRoute
    }
  }
}

interface DashboardLayoutRouteChildren {
  DashboardBoardIdRoute: typeof DashboardBoardIdRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardBoardIdRoute: DashboardBoardIdRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

interface AuthAuthLayoutRouteChildren {
  AuthAuthLayoutSigninRoute: typeof AuthAuthLayoutSigninRoute
  AuthAuthLayoutSignupRoute: typeof AuthAuthLayoutSignupRoute
}

const AuthAuthLayoutRouteChildren: AuthAuthLayoutRouteChildren = {
  AuthAuthLayoutSigninRoute: AuthAuthLayoutSigninRoute,
  AuthAuthLayoutSignupRoute: AuthAuthLayoutSignupRoute,
}

const AuthAuthLayoutRouteWithChildren = AuthAuthLayoutRoute._addFileChildren(
  AuthAuthLayoutRouteChildren,
)

interface AuthRouteChildren {
  AuthAuthLayoutRoute: typeof AuthAuthLayoutRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLayoutRoute: AuthAuthLayoutRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
