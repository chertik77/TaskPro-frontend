/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './../../../app/routes/__root'
import { Route as IndexRouteImport } from './../../../app/routes/index'
import { Route as dashboardDashboardRouteImport } from './../../../app/routes/(dashboard)/dashboard'
import { Route as authAuthLayoutRouteImport } from './../../../app/routes/(auth)/_auth-layout'
import { Route as dashboardDashboardIndexRouteImport } from './../../../app/routes/(dashboard)/dashboard.index'
import { Route as dashboardDashboardBoardIdRouteImport } from './../../../app/routes/(dashboard)/dashboard.$boardId'
import { Route as authAuthLayoutSignupRouteImport } from './../../../app/routes/(auth)/_auth-layout.signup'
import { Route as authAuthLayoutSigninRouteImport } from './../../../app/routes/(auth)/_auth-layout.signin'

const authRouteImport = createFileRoute('/(auth)')()

const authRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardDashboardRoute = dashboardDashboardRouteImport.update({
  id: '/(dashboard)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const authAuthLayoutRoute = authAuthLayoutRouteImport.update({
  id: '/_auth-layout',
  getParentRoute: () => authRoute,
} as any)
const dashboardDashboardIndexRoute = dashboardDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardDashboardRoute,
} as any)
const dashboardDashboardBoardIdRoute =
  dashboardDashboardBoardIdRouteImport.update({
    id: '/$boardId',
    path: '/$boardId',
    getParentRoute: () => dashboardDashboardRoute,
  } as any)
const authAuthLayoutSignupRoute = authAuthLayoutSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => authAuthLayoutRoute,
} as any)
const authAuthLayoutSigninRoute = authAuthLayoutSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => authAuthLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof authAuthLayoutRouteWithChildren
  '/dashboard': typeof dashboardDashboardRouteWithChildren
  '/signin': typeof authAuthLayoutSigninRoute
  '/signup': typeof authAuthLayoutSignupRoute
  '/dashboard/$boardId': typeof dashboardDashboardBoardIdRoute
  '/dashboard/': typeof dashboardDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof authAuthLayoutRouteWithChildren
  '/signin': typeof authAuthLayoutSigninRoute
  '/signup': typeof authAuthLayoutSignupRoute
  '/dashboard/$boardId': typeof dashboardDashboardBoardIdRoute
  '/dashboard': typeof dashboardDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_auth-layout': typeof authAuthLayoutRouteWithChildren
  '/(dashboard)/dashboard': typeof dashboardDashboardRouteWithChildren
  '/(auth)/_auth-layout/signin': typeof authAuthLayoutSigninRoute
  '/(auth)/_auth-layout/signup': typeof authAuthLayoutSignupRoute
  '/(dashboard)/dashboard/$boardId': typeof dashboardDashboardBoardIdRoute
  '/(dashboard)/dashboard/': typeof dashboardDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/signin'
    | '/signup'
    | '/dashboard/$boardId'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/signin' | '/signup' | '/dashboard/$boardId' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(auth)/_auth-layout'
    | '/(dashboard)/dashboard'
    | '/(auth)/_auth-layout/signin'
    | '/(auth)/_auth-layout/signup'
    | '/(dashboard)/dashboard/$boardId'
    | '/(dashboard)/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRoute: typeof authRouteWithChildren
  dashboardDashboardRoute: typeof dashboardDashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/dashboard': {
      id: '/(dashboard)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof dashboardDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/_auth-layout': {
      id: '/(auth)/_auth-layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthLayoutRouteImport
      parentRoute: typeof authRoute
    }
    '/(dashboard)/dashboard/': {
      id: '/(dashboard)/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof dashboardDashboardIndexRouteImport
      parentRoute: typeof dashboardDashboardRoute
    }
    '/(dashboard)/dashboard/$boardId': {
      id: '/(dashboard)/dashboard/$boardId'
      path: '/$boardId'
      fullPath: '/dashboard/$boardId'
      preLoaderRoute: typeof dashboardDashboardBoardIdRouteImport
      parentRoute: typeof dashboardDashboardRoute
    }
    '/(auth)/_auth-layout/signup': {
      id: '/(auth)/_auth-layout/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authAuthLayoutSignupRouteImport
      parentRoute: typeof authAuthLayoutRoute
    }
    '/(auth)/_auth-layout/signin': {
      id: '/(auth)/_auth-layout/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authAuthLayoutSigninRouteImport
      parentRoute: typeof authAuthLayoutRoute
    }
  }
}

interface authAuthLayoutRouteChildren {
  authAuthLayoutSigninRoute: typeof authAuthLayoutSigninRoute
  authAuthLayoutSignupRoute: typeof authAuthLayoutSignupRoute
}

const authAuthLayoutRouteChildren: authAuthLayoutRouteChildren = {
  authAuthLayoutSigninRoute: authAuthLayoutSigninRoute,
  authAuthLayoutSignupRoute: authAuthLayoutSignupRoute,
}

const authAuthLayoutRouteWithChildren = authAuthLayoutRoute._addFileChildren(
  authAuthLayoutRouteChildren,
)

interface authRouteChildren {
  authAuthLayoutRoute: typeof authAuthLayoutRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthLayoutRoute: authAuthLayoutRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

interface dashboardDashboardRouteChildren {
  dashboardDashboardBoardIdRoute: typeof dashboardDashboardBoardIdRoute
  dashboardDashboardIndexRoute: typeof dashboardDashboardIndexRoute
}

const dashboardDashboardRouteChildren: dashboardDashboardRouteChildren = {
  dashboardDashboardBoardIdRoute: dashboardDashboardBoardIdRoute,
  dashboardDashboardIndexRoute: dashboardDashboardIndexRoute,
}

const dashboardDashboardRouteWithChildren =
  dashboardDashboardRoute._addFileChildren(dashboardDashboardRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRoute: authRouteWithChildren,
  dashboardDashboardRoute: dashboardDashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
