/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as authAuthLayoutImport } from './routes/(auth)/_auth-layout'
import { Route as authAuthLayoutSigninImport } from './routes/(auth)/_auth-layout.signin'
import { Route as authAuthLayoutSignupImport } from './routes/(auth)/_auth-layout.signup'
import { Route as DashboardBoardIdImport } from './routes/dashboard/$boardId'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const authImport = createFileRoute('/(auth)')()

// Create/Update Routes

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute
} as any)

const DashboardBoardIdRoute = DashboardBoardIdImport.update({
  id: '/dashboard/$boardId',
  path: '/dashboard/$boardId',
  getParentRoute: () => rootRoute
} as any)

const authAuthLayoutRoute = authAuthLayoutImport.update({
  id: '/_auth-layout',
  getParentRoute: () => authRoute
} as any)

const authAuthLayoutSignupRoute = authAuthLayoutSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => authAuthLayoutRoute
} as any)

const authAuthLayoutSigninRoute = authAuthLayoutSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => authAuthLayoutRoute
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_auth-layout': {
      id: '/(auth)/_auth-layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthLayoutImport
      parentRoute: typeof authRoute
    }
    '/dashboard/$boardId': {
      id: '/dashboard/$boardId'
      path: '/dashboard/$boardId'
      fullPath: '/dashboard/$boardId'
      preLoaderRoute: typeof DashboardBoardIdImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_auth-layout/signin': {
      id: '/(auth)/_auth-layout/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authAuthLayoutSigninImport
      parentRoute: typeof authAuthLayoutImport
    }
    '/(auth)/_auth-layout/signup': {
      id: '/(auth)/_auth-layout/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authAuthLayoutSignupImport
      parentRoute: typeof authAuthLayoutImport
    }
  }
}

// Create and export the route tree

interface authAuthLayoutRouteChildren {
  authAuthLayoutSigninRoute: typeof authAuthLayoutSigninRoute
  authAuthLayoutSignupRoute: typeof authAuthLayoutSignupRoute
}

const authAuthLayoutRouteChildren: authAuthLayoutRouteChildren = {
  authAuthLayoutSigninRoute: authAuthLayoutSigninRoute,
  authAuthLayoutSignupRoute: authAuthLayoutSignupRoute
}

const authAuthLayoutRouteWithChildren = authAuthLayoutRoute._addFileChildren(
  authAuthLayoutRouteChildren
)

interface authRouteChildren {
  authAuthLayoutRoute: typeof authAuthLayoutRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthLayoutRoute: authAuthLayoutRouteWithChildren
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof authAuthLayoutRouteWithChildren
  '/dashboard/$boardId': typeof DashboardBoardIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/signin': typeof authAuthLayoutSigninRoute
  '/signup': typeof authAuthLayoutSignupRoute
}

export interface FileRoutesByTo {
  '/': typeof authAuthLayoutRouteWithChildren
  '/dashboard/$boardId': typeof DashboardBoardIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/signin': typeof authAuthLayoutSigninRoute
  '/signup': typeof authAuthLayoutSignupRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_auth-layout': typeof authAuthLayoutRouteWithChildren
  '/dashboard/$boardId': typeof DashboardBoardIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/(auth)/_auth-layout/signin': typeof authAuthLayoutSigninRoute
  '/(auth)/_auth-layout/signup': typeof authAuthLayoutSignupRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard/$boardId' | '/dashboard' | '/signin' | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard/$boardId' | '/dashboard' | '/signin' | '/signup'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(auth)/_auth-layout'
    | '/dashboard/$boardId'
    | '/dashboard/'
    | '/(auth)/_auth-layout/signin'
    | '/(auth)/_auth-layout/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRoute: typeof authRouteWithChildren
  DashboardBoardIdRoute: typeof DashboardBoardIdRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRoute: authRouteWithChildren,
  DashboardBoardIdRoute: DashboardBoardIdRoute,
  DashboardIndexRoute: DashboardIndexRoute
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)",
        "/dashboard/$boardId",
        "/dashboard/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_auth-layout"
      ]
    },
    "/(auth)/_auth-layout": {
      "filePath": "(auth)/_auth-layout.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_auth-layout/signin",
        "/(auth)/_auth-layout/signup"
      ]
    },
    "/dashboard/$boardId": {
      "filePath": "dashboard/$boardId.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/(auth)/_auth-layout/signin": {
      "filePath": "(auth)/_auth-layout.signin.tsx",
      "parent": "/(auth)/_auth-layout"
    },
    "/(auth)/_auth-layout/signup": {
      "filePath": "(auth)/_auth-layout.signup.tsx",
      "parent": "/(auth)/_auth-layout"
    }
  }
}
ROUTE_MANIFEST_END */
